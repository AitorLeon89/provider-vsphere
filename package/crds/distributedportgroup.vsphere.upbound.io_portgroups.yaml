---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: portgroups.distributedportgroup.vsphere.upbound.io
spec:
  group: distributedportgroup.vsphere.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - vsphere
    kind: PortGroup
    listKind: PortGroupList
    plural: portgroups
    singular: portgroup
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PortGroup is the Schema for the PortGroups API. Provides a vSphere
          distributed port group resource. This can be used to create and manage port
          groups on a vSphere Distributed Switch.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PortGroupSpec defines the desired state of PortGroup
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  activeUplinks:
                    description: List of active uplinks used for load balancing, matching
                      the names of the uplinks assigned in the DVS.
                    items:
                      type: string
                    type: array
                  allowForgedTransmits:
                    description: Controls whether or not the virtual network adapter
                      is allowed to send network traffic with a different MAC address
                      than that of its own.
                    type: boolean
                  allowMacChanges:
                    description: Controls whether or not the Media Access Control
                      (MAC) address can be changed.
                    type: boolean
                  allowPromiscuous:
                    description: Enable promiscuous mode on the network. This flag
                      indicates whether or not all traffic is seen on a given port.
                    type: boolean
                  autoExpand:
                    description: 'Allows the port group to create additional ports
                      past the limit specified in number_of_ports if necessary. Default:
                      true. Auto-expands the port group beyond the port count configured
                      in number_of_ports when necessary.'
                    type: boolean
                  blockAllPorts:
                    description: Indicates whether to block all ports by default.
                    type: boolean
                  blockOverrideAllowed:
                    description: Allow the port shutdown policy to be overridden on
                      an individual port. Allow the blocked setting of an individual
                      port to override the setting in the portgroup.
                    type: boolean
                  checkBeacon:
                    description: Enable beacon probing on the ports this policy applies
                      to.
                    type: boolean
                  customAttributes:
                    additionalProperties:
                      type: string
                    description: Map of custom attribute ids to attribute value string
                      to set for port group. See here for a reference on how to set
                      values for custom attributes. A list of custom attributes to
                      set on this resource.
                    type: object
                  description:
                    description: An optional description for the port group. The description
                      of the portgroup.
                    type: string
                  directpathGen2Allowed:
                    description: Allow VMDirectPath Gen2 on the ports this policy
                      applies to.
                    type: boolean
                  distributedVirtualSwitchUuid:
                    description: The ID of the VDS to add the port group to. Forces
                      a new resource if changed. The UUID of the DVS to attach this
                      port group to.
                    type: string
                  egressShapingAverageBandwidth:
                    description: The average egress bandwidth in bits per second if
                      egress shaping is enabled on the port.
                    type: number
                  egressShapingBurstSize:
                    description: The maximum egress burst size allowed in bytes if
                      egress shaping is enabled on the port.
                    type: number
                  egressShapingEnabled:
                    description: True if the traffic shaper is enabled for egress
                      traffic on the port.
                    type: boolean
                  egressShapingPeakBandwidth:
                    description: The peak egress bandwidth during bursts in bits per
                      second if egress traffic shaping is enabled on the port.
                    type: number
                  failback:
                    description: If true, the teaming policy will re-activate failed
                      interfaces higher in precedence when they come back up.
                    type: boolean
                  ingressShapingAverageBandwidth:
                    description: The average ingress bandwidth in bits per second
                      if ingress shaping is enabled on the port.
                    type: number
                  ingressShapingBurstSize:
                    description: The maximum ingress burst size allowed in bytes if
                      ingress shaping is enabled on the port.
                    type: number
                  ingressShapingEnabled:
                    description: True if the traffic shaper is enabled for ingress
                      traffic on the port.
                    type: boolean
                  ingressShapingPeakBandwidth:
                    description: The peak ingress bandwidth during bursts in bits
                      per second if ingress traffic shaping is enabled on the port.
                    type: number
                  lacpEnabled:
                    description: Whether or not to enable LACP on all uplink ports.
                    type: boolean
                  lacpMode:
                    description: The uplink LACP mode to use. Can be one of active
                      or passive.
                    type: string
                  livePortMovingAllowed:
                    description: Allow a port in this port group to be moved to another
                      port group while it is connected. Allow a live port to be moved
                      in and out of the portgroup.
                    type: boolean
                  netflowEnabled:
                    description: Indicates whether to enable netflow on all ports.
                    type: boolean
                  netflowOverrideAllowed:
                    description: Allow the Netflow policy on this port group to be
                      overridden on an individual port. Allow the enabling or disabling
                      of Netflow on a port, contrary to the policy in the portgroup.
                    type: boolean
                  networkResourcePoolKey:
                    description: The key of a network resource pool to associate with
                      this port group. The default is -1, which implies no association.
                      The key of a network resource pool to associate with this portgroup.
                    type: string
                  networkResourcePoolOverrideAllowed:
                    description: Allow the network resource pool set on this port
                      group to be overridden on an individual port. Allow the network
                      resource pool of an individual port to override the setting
                      in the portgroup.
                    type: boolean
                  notifySwitches:
                    description: If true, the teaming policy will notify the broadcast
                      network of a NIC failover, triggering cache updates.
                    type: boolean
                  numberOfPorts:
                    description: The number of ports available on this port group.
                      Cannot be decreased below the amount of used ports on the port
                      group. The number of ports in this portgroup. The DVS will expand
                      and shrink by modifying this setting.
                    type: number
                  portConfigResetAtDisconnect:
                    description: Reset a port's settings to the settings defined on
                      this port group policy when the port disconnects. Reset the
                      setting of any ports in this portgroup back to the default setting
                      when the port disconnects.
                    type: boolean
                  portNameFormat:
                    description: An optional formatting policy for naming of the ports
                      in this port group. See the portNameFormat attribute listed
                      here for details on the format syntax. A template string to
                      use when creating ports in the portgroup.
                    type: string
                  portPrivateSecondaryVlanId:
                    description: Used to define a secondary VLAN ID when using private
                      VLANs. The secondary VLAN ID for this port.
                    type: number
                  securityPolicyOverrideAllowed:
                    description: Allow the security policy settings defined in this
                      port group policy to be overridden on an individual port. Allow
                      security policy settings on a port to override those on the
                      portgroup.
                    type: boolean
                  shapingOverrideAllowed:
                    description: Allow the traffic shaping options on this port group
                      policy to be overridden on an individual port. Allow the traffic
                      shaping policies of an individual port to override the settings
                      in the portgroup.
                    type: boolean
                  standbyUplinks:
                    description: List of standby uplinks used for load balancing,
                      matching the names of the uplinks assigned in the DVS.
                    items:
                      type: string
                    type: array
                  tags:
                    description: A list of tag IDs to apply to this object.
                    items:
                      type: string
                    type: array
                  teamingPolicy:
                    description: The network adapter teaming policy. Can be one of
                      loadbalance_ip, loadbalance_srcmac, loadbalance_srcid, failover_explicit,
                      or loadbalance_loadbased.
                    type: string
                  trafficFilterOverrideAllowed:
                    description: Allow any traffic filters on this port group to be
                      overridden on an individual port. Allow any filter policies
                      set on the individual port to override those in the portgroup.
                    type: boolean
                  txUplink:
                    description: If true, a copy of packets sent to the switch will
                      always be forwarded to an uplink in addition to the regular
                      packet forwarded done by the switch.
                    type: boolean
                  type:
                    description: 'The port group type. Can be one of earlyBinding
                      (static binding) or ephemeral. Default: earlyBinding. The type
                      of portgroup. Can be one of earlyBinding (static) or ephemeral.'
                    type: string
                  uplinkTeamingOverrideAllowed:
                    description: Allow the uplink teaming options on this port group
                      to be overridden on an individual port. Allow the uplink teaming
                      policies on a port to override those on the portgroup.
                    type: boolean
                  vlanId:
                    description: The member VLAN for the ports this policy applies
                      to. A value of 0 means no VLAN. The VLAN ID for single VLAN
                      mode. 0 denotes no VLAN.
                    type: number
                  vlanOverrideAllowed:
                    description: Allow the VLAN settings on this port group to be
                      overridden on an individual port. Allow the VLAN configuration
                      on a port to override those on the portgroup.
                    type: boolean
                  vlanRange:
                    description: 'Used to denote VLAN trunking. Use the min_vlan and
                      max_vlan sub-arguments to define the tagged VLAN range. Multiple
                      vlan_range definitions are allowed, but they must not overlap.
                      Example below: The VLAN ID for single VLAN mode. 0 denotes no
                      VLAN.'
                    items:
                      properties:
                        maxVlan:
                          description: The minimum VLAN to use in the range.
                          type: number
                        minVlan:
                          description: The minimum VLAN to use in the range.
                          type: number
                      required:
                      - maxVlan
                      - minVlan
                      type: object
                    type: array
                required:
                - distributedVirtualSwitchUuid
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: PortGroupStatus defines the observed state of PortGroup.
            properties:
              atProvider:
                properties:
                  configVersion:
                    description: ': The current version of the port group configuration,
                      incremented by subsequent updates to the port group. Version
                      string of the configuration that this spec is trying to change.'
                    type: string
                  id:
                    description: ': The managed object reference ID of the created
                      port group.'
                    type: string
                  key:
                    description: ': The generated UUID of the port group. The generated
                      UUID of the portgroup.'
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
